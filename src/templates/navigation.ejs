<%# navigation.ejs - Renders the sidebar navigation %>
<nav class="sidebar-nav" aria-label="Main navigation">
  <ul>
    <%
      // A robust, centralized function to normalize navigation paths
      function normalizePath(p) {
        if (!p) return '#';
        let path = p.replace(/\\/g, '/');
        
        if (path.endsWith('index.md')) {
          path = path.slice(0, -'index.md'.length);
        } else {
          path = path.replace(/\.md$/, '');
        }

        if (!path.startsWith('/')) path = '/' + path;

        if (path.length > 1 && !path.endsWith('/')) {
          path += '/';
        }
        
        // Handle root case where path might be "" after stripping index.md
        if (path === '') path = '/';
        
        return path;
      }

      // Helper to check for active children recursively
      function hasActiveChild(item, currentPagePath) {
        if (!item.children || !Array.isArray(item.children)) return false;
        return item.children.some(child => {
          if (!child.path || child.external) return false;
          const childPath = normalizePath(child.path);
          if (currentPagePath === childPath) return true;
          return hasActiveChild(child, currentPagePath);
        });
      }

      // Recursive function to render navigation items
      function renderNav(items) {
        if (!items || !Array.isArray(items)) return;
        items.forEach(item => {
          const isExternal = item.external || false;
          let itemPath = item.path || '#';
          
          const normalizedItemPath = isExternal ? itemPath : normalizePath(itemPath);

          const isActive = !isExternal && currentPagePath === normalizedItemPath;
          const isParentOfActive = !isActive && hasActiveChild(item, currentPagePath);
          const isCollapsible = item.children && item.collapsible;

          const liClasses = [];
          if (isActive) liClasses.push('active');
          if (isParentOfActive) liClasses.push('active-parent');
          if (isCollapsible) liClasses.push('collapsible');
          
          const finalHref = isExternal ? item.path : (itemPath === '#' ? '#' : (relativePathToRoot + (item.path.startsWith('/') ? item.path.substring(1) : item.path)));
    %>
    <li class="<%= liClasses.join(' ') %>" <%- isCollapsible ? `data-nav-id="${item.path}"` : '' %>>
      <a href="<%- finalHref %>" class="<%- isActive ? 'active' : '' %>" <%- isExternal ? 'target="_blank" rel="noopener"' : '' %>>
        <% if (item.icon) { %> <%- renderIcon(item.icon) %> <% } %>
        <span class="nav-item-title"><%= item.title %></span>
        <% if (isCollapsible) { %> <%- renderIcon('chevron-right', { class: 'collapse-icon' }) %> <% } %>
        <% if (isExternal) { %> <%- renderIcon('external-link', { class: 'nav-external-icon' }) %> <% } %>
      </a>
      <% if (item.children) { %>
        <ul class="submenu">
          <% renderNav(item.children); %>
        </ul>
      <% } %>
    </li>
    <%
        });
      }
      renderNav(navItems);
    %>
  </ul>
</nav>