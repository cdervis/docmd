name: Publish Package to NPM and GitHub Packages

on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js (common for initial steps and npm ci)
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # --- Publish to NPM Registry (npmjs.com) ---
      - name: Set up Node.js for npmjs.com
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          registry-url: 'https://registry.npmjs.org/'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }} # This configures .npmrc

      - name: Ensure package.json is set for npmjs.com (publish as docmd)
        run: |
          echo "Current package.json before npmjs.com publish:"
          cat package.json
          VERSION=$(node -p "require('./package.json').version")
          jq --arg newName "docmd" --arg newVersion "$VERSION" '.name = $newName | .version = $newVersion | del(.publishConfig)' package.json > package_temp.json
          mv package_temp.json package.json
          echo "package.json for npmjs.com publishing:"
          cat package.json

      # DEBUG - REMOVE THIS AFTER CONFIRMING NPM_TOKEN IS WORKING
      - name: DEBUG - Check NPM_TOKEN availability for npmjs.com
        if: always()
        run: |
          if [ -z "$NODE_AUTH_TOKEN_SECRET" ]; then
            echo "NPM_TOKEN secret is empty or not set for npmjs.com."
          else
            echo "NPM_TOKEN secret is set for npmjs.com. Length: ${#NODE_AUTH_TOKEN_SECRET}"
          fi
        env:
          NODE_AUTH_TOKEN_SECRET: ${{ secrets.NPM_TOKEN }}

      - name: Publish to NPM Registry (npmjs.com)
        run: npm publish
        # No explicit env: NODE_AUTH_TOKEN needed here if setup-node configured .npmrc correctly

      # --- Publish to GitHub Packages ---
      - name: Set up Node.js for GitHub Packages
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@mgks'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This configures .npmrc

      - name: Adjust package.json for GitHub Packages (publish as @mgks/docmd)
        run: |
          echo "Current package.json before GPR publish (should be 'docmd'):"
          cat package.json
          VERSION=$(node -p "require('./package.json').version")
          jq --arg newName "@mgks/docmd" --arg newVersion "$VERSION" '.name = $newName | .version = $newVersion' package.json > package_temp.json
          mv package_temp.json package.json
          echo "Updated package.json for GPR publishing:"
          cat package.json

      - name: Publish to GitHub Packages
        run: npm publish
        # No explicit env: NODE_AUTH_TOKEN needed here if setup-node configured .npmrc correctly